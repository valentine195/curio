/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.javalent.curio.api;

import java.time.OffsetDateTime;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-08-13T23:03:28.161558-04:00[America/New_York]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "Echo", description = "Example echo operations.")
public interface EchoApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /echo : Echo test
     * This endpoint returns the exact message you&#39;ve sent to it. You can use it for testing purposes.
     *
     * @param body Example Echo payload. When the response is received, its contents should match the contents from the payload. (required)
     * @return OK (status code 200)
     *         or Unauthorized (status code 400)
     */
    @Operation(
        operationId = "echo",
        summary = "Echo test",
        description = "This endpoint returns the exact message you've sent to it. You can use it for testing purposes.",
        tags = { "Echo" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "400", description = "Unauthorized")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/echo",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<String> echo(
        @Parameter(name = "body", description = "Example Echo payload. When the response is received, its contents should match the contents from the payload.", required = true) @Valid @RequestBody String body
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
